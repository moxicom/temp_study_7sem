# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
VENV_DIR := .venv
PYTHON := python3
AVD_NAME := Medium_Phone_API_36.0
APPIUM_PORT := 4723

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[1;33m
BLUE := \033[0;34m
NC := \033[0m # No Color

.PHONY: all help setup deps python appium test clean run-emulator run-appium run-tests stop-all

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏
all: setup

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)üöÄ –ú–æ–±–∏–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã$(NC)"
	@echo "=================================================="
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "$(GREEN)%-20s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)

setup: deps python appium ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(GREEN)‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"
	@echo "$(YELLOW)üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:$(NC)"
	@echo "1. make run-emulator  # –ó–∞–ø—É—Å–∫ —ç–º—É–ª—è—Ç–æ—Ä–∞"
	@echo "2. make run-appium    # –ó–∞–ø—É—Å–∫ Appium —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "3. make run-tests     # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"

deps: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	sudo apt update
	sudo apt install -y openjdk-17-jdk nodejs npm python3-venv python3-pip wget unzip
	sudo npm install -g n
	sudo n lts
	@echo "$(GREEN)‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

python: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	$(PYTHON) -m venv $(VENV_DIR)
	$(VENV_DIR)/bin/pip install --upgrade pip
	$(VENV_DIR)/bin/pip install -r requirements.txt
	@echo "$(GREEN)‚úÖ Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ$(NC)"

appium: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Appium –∏ –¥—Ä–∞–π–≤–µ—Ä–æ–≤
	@echo "$(BLUE)üì± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Appium...$(NC)"
	sudo npm install -g appium --unsafe-perm=true
	appium driver install uiautomator2
	appium driver install xcuitest
	@echo "$(GREEN)‚úÖ Appium —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —á–∞—Å–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–π Appium –∏ —ç–º—É–ª—è—Ç–æ—Ä)
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —á–∞—Å–æ–≤...$(NC)"
	@if ! pgrep -f "appium" > /dev/null; then \
		echo "$(RED)‚ùå Appium —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make run-appium$(NC)"; \
		exit 1; \
	fi
	@if ! adb devices | grep -q "emulator"; then \
		echo "$(RED)‚ùå –≠–º—É–ª—è—Ç–æ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make run-emulator$(NC)"; \
		exit 1; \
	fi
	$(VENV_DIR)/bin/python test_clock.py
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã —á–∞—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"

run-emulator: ## –ó–∞–ø—É—Å–∫ Android —ç–º—É–ª—è—Ç–æ—Ä–∞
	@echo "$(BLUE)üì± –ó–∞–ø—É—Å–∫ Android —ç–º—É–ª—è—Ç–æ—Ä–∞...$(NC)"
	@if pgrep -f "emulator" > /dev/null; then \
		echo "$(YELLOW)‚ö†Ô∏è  –≠–º—É–ª—è—Ç–æ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω$(NC)"; \
	else \
		emulator -avd $(AVD_NAME) -no-audio -no-window & \
		echo "$(GREEN)‚úÖ –≠–º—É–ª—è—Ç–æ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...$(NC)"; \
		echo "$(YELLOW)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–º—É–ª—è—Ç–æ—Ä–∞ (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)...$(NC)"; \
		timeout 300 bash -c 'until adb shell getprop sys.boot_completed 2>/dev/null | grep -q "1"; do sleep 5; done' || echo "$(RED)‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —ç–º—É–ª—è—Ç–æ—Ä–∞$(NC)"; \
		echo "$(GREEN)‚úÖ –≠–º—É–ª—è—Ç–æ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ$(NC)"; \
	fi

run-appium: ## –ó–∞–ø—É—Å–∫ Appium —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ Appium —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	@if pgrep -f "appium" > /dev/null; then \
		echo "$(YELLOW)‚ö†Ô∏è  Appium —Å–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω$(NC)"; \
	else \
		appium --port $(APPIUM_PORT) & \
		echo "$(GREEN)‚úÖ Appium —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $(APPIUM_PORT)$(NC)"; \
		sleep 3; \
	fi

run-tests: run-emulator run-appium ## –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Å–æ–≤
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Å–æ–≤...$(NC)"
	sleep 10  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
	$(VENV_DIR)/bin/python test_clock.py
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"

stop-all: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@pkill -f "appium" && echo "$(GREEN)‚úÖ Appium —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)" || echo "$(YELLOW)‚ö†Ô∏è  Appium —Å–µ—Ä–≤–µ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω$(NC)"
	@pkill -f "emulator" && echo "$(GREEN)‚úÖ –≠–º—É–ª—è—Ç–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)" || echo "$(YELLOW)‚ö†Ô∏è  –≠–º—É–ª—è—Ç–æ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω$(NC)"
	@adb kill-server && echo "$(GREEN)‚úÖ ADB —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)" || echo "$(YELLOW)‚ö†Ô∏è  ADB —Å–µ—Ä–≤–µ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω$(NC)"

clean: stop-all ## –û—á–∏—Å—Ç–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	rm -rf __pycache__ *.pyc .pytest_cache
	rm -f test_results.log
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤$(NC)"
	@echo "==================="
	@if pgrep -f "appium" > /dev/null; then \
		echo "$(GREEN)‚úÖ Appium —Å–µ—Ä–≤–µ—Ä: –ó–ê–ü–£–©–ï–ù$(NC)"; \
	else \
		echo "$(RED)‚ùå Appium —Å–µ—Ä–≤–µ—Ä: –û–°–¢–ê–ù–û–í–õ–ï–ù$(NC)"; \
	fi
	@if pgrep -f "emulator" > /dev/null; then \
		echo "$(GREEN)‚úÖ –≠–º—É–ª—è—Ç–æ—Ä: –ó–ê–ü–£–©–ï–ù$(NC)"; \
		adb devices | grep emulator || echo "$(YELLOW)‚ö†Ô∏è  –≠–º—É–ª—è—Ç–æ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...$(NC)"; \
	else \
		echo "$(RED)‚ùå –≠–º—É–ª—è—Ç–æ—Ä: –û–°–¢–ê–ù–û–í–õ–ï–ù$(NC)"; \
	fi
	@if adb devices | grep -q "device"; then \
		echo "$(GREEN)‚úÖ ADB: –£–°–¢–†–û–ô–°–¢–í–ê –û–ë–ù–ê–†–£–ñ–ï–ù–´$(NC)"; \
		adb devices; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  ADB: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã$(NC)"; \
	fi

install-apk: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ APK –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä (—Ç—Ä–µ–±—É–µ—Ç –ø—É—Ç—å –∫ APK)
	@if [ -z "$(APK_PATH)" ]; then \
		echo "$(RED)‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ APK: make install-apk APK_PATH=/path/to/app.apk$(NC)"; \
		exit 1; \
	fi
	@echo "$(BLUE)üì± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ APK: $(APK_PATH)$(NC)"
	adb install "$(APK_PATH)"
	@echo "$(GREEN)‚úÖ APK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	@if [ -f "test_results.log" ]; then \
		echo "$(BLUE)üìã –õ–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:$(NC)"; \
		tail -50 test_results.log; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å
.DEFAULT_GOAL := help
